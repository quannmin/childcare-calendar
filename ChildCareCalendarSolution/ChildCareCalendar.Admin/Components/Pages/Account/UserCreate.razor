@page "/users/create"
@using ChildCareCalendar.Admin.Extensions
@using ChildCareCalendar.Utilities.Constants
@using ChildCareCalendar.Utilities.Helper
@rendermode InteractiveServer

<h3>Tạo mới danh mục</h3>
<hr />

@if (ErrorMessage.Count > 0)
{
    @foreach (string error in ErrorMessage)
    {
        <div class="alert alert-danger">@error</div>
    }
}

<EditForm EditContext="editContext" OnValidSubmit="HandleCreateDoctor">
    <DataAnnotationsValidator />

    <div class="row">
        <!-- Cột 1 -->
        <div class="col-md-6">
            <div class="form-group m-2">
                <label>Email</label>
                <InputText class="form-control" @bind-Value="userCreateViewModel.Email" />
                <ValidationMessage For="@(() => userCreateViewModel.Email)" class="text-danger" />
            </div>

            <div class="form-group m-2">
                <label>Password</label>
                <InputText type="password" class="form-control" @bind-Value="userCreateViewModel.Password" @oninput="ValidateConfirmPassword" />
                <ValidationMessage For="@(() => userCreateViewModel.Password)" class="text-danger" />
            </div>

            <div class="form-group m-2">
                <label>Xác nhận Password</label>
                <InputText type="password" class="form-control" @bind-Value="userCreateViewModel.ConfirmPassword" @oninput="ValidateConfirmPassword" />
                <ValidationMessage For="@(() => userCreateViewModel.ConfirmPassword)" class="text-danger" />
            </div>

            <div class="form-group m-2">
                <label>Tên người dùng</label>
                <InputText class="form-control" @bind-Value="userCreateViewModel.FullName" />
                <ValidationMessage For="@(() => userCreateViewModel.FullName)" class="text-danger" />
            </div>
            <div class="form-group m-2">
                <label>Số điện thoại</label>
                <InputText class="form-control" @bind-Value="userCreateViewModel.PhoneNumber" />
                <ValidationMessage For="@(() => userCreateViewModel.PhoneNumber)" class="text-danger" />
            </div>
            <div class="form-group m-2">
                <label>Ngày tháng năm sinh</label>
                <InputDate class="form-control" @bind-Value="userCreateViewModel.Dob" />
                <ValidationMessage For="@(() => userCreateViewModel.Dob)" class="text-danger" />
            </div>
            <div class="form-group m-2">
                <label>Địa chỉ</label>
                <InputText class="form-control" @bind-Value="userCreateViewModel.Address" />
                <ValidationMessage For="@(() => userCreateViewModel.Address)" class="text-danger" />
            </div>
        </div>

        <!-- Cột 2 -->
        <div class="col-md-6 p-2">
            
            <div class="form-group m-2">
                <label>Giới tính</label>
                <InputSelect class="form-control" @bind-Value="userCreateViewModel.Gender">
                    @foreach (var gender in Enum.GetValues<SystemConstant.Gender>())
                    {
                        <option value="@gender">@gender.ToString()</option>
                    }
                </InputSelect>
                <ValidationMessage For="@(() => userCreateViewModel.Gender)" class="text-danger" />
            </div>
            <div class="form-group m-2">
                <label>Vai trò</label>
                <InputSelect class="form-control" ValueExpression="@(() => userCreateViewModel.Role)"
                             Value="@userCreateViewModel.Role"
                             ValueChanged="@((SystemConstant.AccountsRole value) => OnRoleChanged(value))">
                    @foreach (var role in Enum.GetValues<SystemConstant.AccountsRole>())
                    {
                        <option value="@role">@role.GetDisplayName()</option>
                    }
                </InputSelect>
                <ValidationMessage For="@(() => userCreateViewModel.Role)" class="text-danger" />
            </div>
            @if (showSpecialties)
            {
                <div class="form-group m-2">
                    <label>Chuyên khoa</label>
                    <InputSelect class="form-control" @bind-Value="userCreateViewModel.SpecialityId">
                        @foreach (var specialty in specialtiesViewModel)
                        {
                            <option value="@specialty.Id">@specialty.SpecialtyName</option>
                        }
                    </InputSelect>
                    <ValidationMessage For="@(() => userCreateViewModel.SpecialityId)" class="text-danger" />
                </div>
            }
            <div class="text-center w-100">
                <label class="w-100 text-start">Ảnh người dùng</label>
            </div>
            <div class="col-md-12">
                <div class="input-group w-100">
                    <label class="btn btn-primary w-100">
                        <i class="bi bi-upload"></i> Chọn ảnh
                        <InputFile OnChange="HandleFileSelection" accept="image/*" class="d-none" />
                    </label>
                </div>
            </div>
            @if (!string.IsNullOrEmpty(PreviewImageUrl))
            {
                <div class="form-group m-2 text-center" style="margin-left: 19px">
                    <p class="fw-bold">Ảnh xem trước:</p>
                    <img src="@PreviewImageUrl" alt="Preview Image" class="img-thumbnail shadow" style="width: 250px; height: 250px; object-fit: cover; border-radius: 10px;" />
                </div>
            }
        </div>
    </div>

    <!-- Nút Tạo Mới và Quay Lại -->
    <div class="form-group row mt-3">
        <div class="col-md-8">
            <button type="submit" class="btn btn-success" disabled="@isSubmitting">
                @(isSubmitting ? "Đang xử lý..." : "Tạo mới")
            </button>
        </div>
        <div class="col-md-4">
            <a class="btn btn-secondary" href="/">Về trang quản lí người dùng</a>
        </div>
    </div>
</EditForm>
