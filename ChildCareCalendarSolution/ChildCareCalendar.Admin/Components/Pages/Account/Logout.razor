@page "/logout"
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Authentication.Cookies
@using Microsoft.AspNetCore.Authorization
@inject IHttpContextAccessor HttpContextAccessor
@inject NavigationManager NavigationManager
@attribute [Authorize]

@code {
    protected override async Task OnInitializedAsync()
    {
        try
        {
            // Ensure HttpContext is not null
            var httpContext = HttpContextAccessor.HttpContext;
            if (httpContext == null)
            {
                NavigationManager.NavigateTo("/login", forceLoad: true);
                return;
            }

            // Sign out
            await httpContext.SignOutAsync(
                CookieAuthenticationDefaults.AuthenticationScheme
            );

            // Clear cookies
            httpContext.Response.Cookies.Delete(
                CookieAuthenticationDefaults.AuthenticationScheme
            );

            StateHasChanged();

            await Task.Delay(100);
            NavigationManager.NavigateTo("/login", forceLoad: true);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Logout error: {ex.Message}");
            NavigationManager.NavigateTo("/login", forceLoad: true);
        }
    }
}