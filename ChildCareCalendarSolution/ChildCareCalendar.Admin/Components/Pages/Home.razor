@page "/"
@rendermode InteractiveServer
@inject IJSRuntime JS
@using ChildCareCalendar.Domain.ViewModels.Account
@using ChildCareCalendar.Infrastructure.Services.Interfaces
@using ChildCareCalendar.Infrastructure.Services
@using ChildCareCalendar.Domain.ViewModels
<PageTitle>Dashboard</PageTitle>

<div class="pc-content">
	<div class="row">
		@* Tổng lịch hẹn trong tuần *@
		<div class="col-md-6 col-xxl-4">
			<div class="col-md-6 col-xxl-12">
				<div class="card">
					<div class="card-body">
						<div class="d-flex align-items-center">
							<div class="flex-shrink-0">
								<div class="avtar avtar-s bg-light-primary">
									<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
										<path opacity="0.4"
											  d="M13 9H7"
											  stroke="#4680FF"
											  stroke-width="1.5"
											  stroke-linecap="round"
											  stroke-linejoin="round" />
										<path d="M22.0002 10.9702V13.0302C22.0002 13.5802 21.5602 14.0302 21.0002 14.0502H19.0402C17.9602 14.0502 16.9702 13.2602 16.8802 12.1802C16.8202 11.5502 17.0602 10.9602 17.4802 10.5502C17.8502 10.1702 18.3602 9.9502 18.9202 9.9502H21.0002C21.5602 9.9702 22.0002 10.4202 22.0002 10.9702Z"
											  stroke="#4680FF"
											  stroke-width="1.5"
											  stroke-linecap="round"
											  stroke-linejoin="round" />
										<path d="M17.48 10.55C17.06 10.96 16.82 11.55 16.88 12.18C16.97 13.26 17.96 14.05 19.04 14.05H21V15.5C21 18.5 19 20.5 16 20.5H7C4 20.5 2 18.5 2 15.5V8.5C2 5.78 3.64 3.88 6.19 3.56C6.45 3.52 6.72 3.5 7 3.5H16C16.26 3.5 16.51 3.50999 16.75 3.54999C19.33 3.84999 21 5.76 21 8.5V9.95001H18.92C18.36 9.95001 17.85 10.17 17.48 10.55Z"
											  stroke="#4680FF"
											  stroke-width="1.5"
											  stroke-linecap="round"
											  stroke-linejoin="round" />
									</svg>
								</div>
							</div>
							<div class="flex-grow-1 ms-3">
								<h6 class="mb-0">Tổng lịch hẹn trong tuần</h6>
							</div>
						</div>

						<div class="bg-body p-3 mt-3 rounded">
							<div class="mt-3 row align-items-center">
								<div class="col-7">
									<div id="all-earnings-graph"></div>
								</div>
								<div class="col-5">
									<p class="text-primary mb-0">Tổng lượt hẹn</p>
									<h5 class="mb-1" id="total-appointments">0</h5>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>

			<div class="col-md-6 col-xxl-12">
				<div class="card">
					<div class="card-header">
						<h5>Lịch hẹn theo trạng thái trong ngày</h5>
					</div>
					<div class="card-body">
						<div class="bg-body p-3 mt-3 rounded">
							<div class="mt-3 row align-items-center">
								<div class="col-7">
									<div id="chart-donut-status-appointment"></div>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>


		@* Người dùng mới trong 30 ngày qua *@
		<div class="col-md-6 col-xxl-8">
			<div class="card">
				<div class="card-header">
					<h5>Người dùng mới trong 30 ngày qua</h5>
				</div>
				<div class="card-body">
					<div id="new-users-line-chart"></div>
				</div>
			</div>
		</div>

		@* <div class="col-md-6 col-xxl-4">
		<div class="card">
		<div class="card-body">
		<div class="d-flex align-items-center">
		<div class="flex-shrink-0">
		<div class="avtar avtar-s bg-light-success">
		<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
		<path d="M8 2V5"
		stroke="#2ca87f"
		stroke-width="1.5"
		stroke-miterlimit="10"
		stroke-linecap="round"
		stroke-linejoin="round" />
		<path d="M16 2V5"
		stroke="#2ca87f"
		stroke-width="1.5"
		stroke-miterlimit="10"
		stroke-linecap="round"
		stroke-linejoin="round" />
		<path opacity="0.4"
		d="M3.5 9.08984H20.5"
		stroke="#2ca87f"
		stroke-width="1.5"
		stroke-miterlimit="10"
		stroke-linecap="round"
		stroke-linejoin="round" />
		<path d="M21 8.5V17C21 20 19.5 22 16 22H8C4.5 22 3 20 3 17V8.5C3 5.5 4.5 3.5 8 3.5H16C19.5 3.5 21 5.5 21 8.5Z"
		stroke="#2ca87f"
		stroke-width="1.5"
		stroke-miterlimit="10"
		stroke-linecap="round"
		stroke-linejoin="round" />
		<path opacity="0.4"
		d="M15.6947 13.7002H15.7037"
		stroke="#2ca87f"
		stroke-width="2"
		stroke-linecap="round"
		stroke-linejoin="round" />
		<path opacity="0.4"
		d="M15.6947 16.7002H15.7037"
		stroke="#2ca87f"
		stroke-width="2"
		stroke-linecap="round"
		stroke-linejoin="round" />
		<path opacity="0.4"
		d="M11.9955 13.7002H12.0045"
		stroke="#2ca87f"
		stroke-width="2"
		stroke-linecap="round"
		stroke-linejoin="round" />
		<path opacity="0.4"
		d="M11.9955 16.7002H12.0045"
		stroke="#2ca87f"
		stroke-width="2"
		stroke-linecap="round"
		stroke-linejoin="round" />
		<path opacity="0.4"
		d="M8.29431 13.7002H8.30329"
		stroke="#2ca87f"
		stroke-width="2"
		stroke-linecap="round"
		stroke-linejoin="round" />
		<path opacity="0.4"
		d="M8.29395 16.7002H8.30293"
		stroke="#2ca87f"
		stroke-width="2"
		stroke-linecap="round"
		stroke-linejoin="round" />
		</svg>
		</div>
		</div>
		<div class="flex-grow-1 ms-3">
		<h6 class="mb-0">Total Task</h6>
		</div>
		</div>
		<div class="bg-body p-3 mt-3 rounded">
		<div class="mt-3 row align-items-center">
		<div class="col-7">
		<div id="total-task-graph"></div>
		</div>
		<div class="col-5">
		<h5 class="mb-1">839</h5>
		<p class="text-success mb-0"><i class="ti ti-arrow-up-right"></i> New</p>
		</div>
		</div>
		</div>
		</div>
		</div>
		</div> *@

		<div class="col-lg-9 m-auto">
			<div class="card">
				<div class="card-body">
					<div class="d-flex align-items-center mb-2">
						<div class="flex-grow-1">
							<h5 class="mb-0">Doanh theo trong năm nay</h5>
						</div>
					</div>
					<div id="customer-rate-graph"></div>
				</div>
			</div>
		</div>
	</div>
</div>

@code {
	[Inject]
	private IAppointmentService appointmentService { get; set; } = default!;
	[Inject]
	private IUserService userService { get; set; } = default!;
	private List<decimal> MonthlyRevenue = new();
	private List<int> WeeklyAppointments = new();
	private List<NewUsersByRoleViewModel> NewUsersByRole = new();
	private Dictionary<string, int> TodayAppointmentsByHour = new();

	private bool IsLoading = true;

	protected override async Task OnInitializedAsync()
	{
		await LoadData();
	}

	private async Task LoadData()
	{
		NewUsersByRole = await userService.GetDailyNewUsersByRoleAsync(30);

		DateTime startOfWeek = DateTime.Now.Date.AddDays(-(int)DateTime.Now.DayOfWeek);

		// Get weekly appointments data
		var weeklyData = await appointmentService.GetWeeklyAppointmentsAsync(startOfWeek);
		WeeklyAppointments = weeklyData.Select(d => d.Count).ToList();

		var revenueData = await appointmentService.GetMonthlyRevenue(DateTime.Now.Year);
		MonthlyRevenue = Enumerable.Range(1, 12)
			.Select(m => revenueData.FirstOrDefault(r => r.Month == m)?.Revenue ?? 0)
			.ToList();

		TodayAppointmentsByHour = await appointmentService.GetAppointmentsByStatusAsync();
	}

	protected override async Task OnAfterRenderAsync(bool firstRender)
	{
		if (firstRender)
		{
			await UpdateChart();

		}
	}

	private async Task UpdateChart()
	{
		var dates = NewUsersByRole.Select(x => x.Date.ToString("dd")).ToArray();
		var parentCounts = NewUsersByRole.Select(x => x.ParentCount).ToArray();
		var doctorCounts = NewUsersByRole.Select(x => x.DoctorCount).ToArray();
		await JS.InvokeVoidAsync("floatchart", MonthlyRevenue, WeeklyAppointments, dates, parentCounts, doctorCounts, TodayAppointmentsByHour.Keys.Select(x => x.GetEnumDisplayName(typeof(SystemConstant.AppointmentStatus))).ToList(), TodayAppointmentsByHour.Values.ToList());
	}
}

<script src="/assets/js/plugins/apexcharts.min.js"></script>
<!-- [Page Specific JS] end -->
<!-- Required Js -->
<script src="/assets/js/plugins/popper.min.js"></script>
<script src="/assets/js/plugins/simplebar.min.js"></script>
<script src="/assets/js/plugins/bootstrap.min.js"></script>
<script src="/assets/js/fonts/custom-font.js"></script>
<script src="/assets/js/pcoded.js"></script>
<script src="/assets/js/plugins/feather.min.js"></script>

<script>
	layout_change('false');
</script>

<script>
	layout_theme_contrast_change('false');
</script>

<script>
	change_box_container('false');
</script>

<script>
	layout_caption_change('true');
</script>

<script>
	layout_rtl_change('false');
</script>

<script>
	preset_change('preset-1');
</script>

<script>
	main_layout_change('vertical');
</script>

<script>
	'use strict';
	document.addEventListener('DOMContentLoaded', function () {
		setTimeout(function () {
			floatchart();
		}, 500);
	});

	function floatchart(revenueData, weeklyAppointmentsData, dates, parentCounts, doctorCounts, appointmentStatusKeys, appointmentStatusValues) {
		(function () {
			const daysOfWeek = ['CN', 'T2', 'T3', 'T4', 'T5', 'T6', 'T7'];
			const totalAppointments = (weeklyAppointmentsData || [0, 0, 0, 0, 0, 0, 0]).reduce((a, b) => a + b, 0);
			document.getElementById('total-appointments').innerText = totalAppointments;

			var options1 = {
				chart: { type: 'bar', height: 80, sparkline: { enabled: true } },
				colors: ['#4680FF'],
				plotOptions: { bar: { columnWidth: '80%', distributed: true } },
				series: [
					{
						data: weeklyAppointmentsData || [0, 0, 0, 0, 0, 0, 0]
					}
				],
				xaxis: {
					categories: daysOfWeek,
					labels: {
						show: true
					}
				},
				yaxis: {
					labels:
					{
						show: false
					}
				},
				tooltip: {
					y: {
						title: {
							formatter: function () {
								return 'Lịch hẹn:';
							}
						}
					}
				}
			};
			document.querySelector('#all-earnings-graph').innerHTML = '';
			var chart = new ApexCharts(document.querySelector('#all-earnings-graph'), options1);
			chart.render();

			var options2 = {
				// chart: { type: 'bar', height: 80, sparkline: { enabled: true } },
				// colors: ['#E58A00'],
				// plotOptions: { bar: { columnWidth: '80%' } },
				// series: [
				//     {
				//         data: [10, 30, 40, 20, 60, 50, 20, 15, 20, 25, 30, 25]
				//     }
				// ],
				// xaxis: { crosshairs: { width: 1 } },
				// tooltip: {
				//     fixed: { enabled: false },
				//     x: { show: false },
				//     y: {
				//         title: {
				//             formatter: function (seriesName) {
				//                 return '';
				//             }
				//         }
				//     },
				//     marker: { show: false }
				// }
				series: [
					{
						name: 'Phụ huynh',
						data: parentCounts
					},
					{
						name: 'Bác sĩ',
						data: doctorCounts
					}
				],
				chart: {
					type: 'line',
					height: 350,
					zoom: {
						enabled: true
					},
					toolbar: {
						show: true
					}
				},
				dataLabels: {
					enabled: false
				},
				stroke: {
					curve: 'smooth',
					width: [3, 3]
				},
				colors: ['#4680FF', '#FF5252'],
				title: {
					text: 'Số lượng người dùng mới theo vai trò',
					align: 'left'
				},
				grid: {
					row: {
						colors: ['#f3f3f3', 'transparent'],
						opacity: 0.5
					},
				},
				markers: {
					size: 4
				},
				xaxis: {
					categories: dates,
					title: {
						text: 'Ngày'
					}
				},
				yaxis: {
					title: {
						text: 'Số lượng'
					},
					min: 0
				},
				legend: {
					position: 'top',
					horizontalAlign: 'right',
				},
				tooltip: {
					shared: true,
					intersect: false,
					y: {
						formatter: function (y) {
							if (typeof y !== "undefined") {
								return y.toFixed(0) + " người dùng";
							}
							return y;
						}
					}
				}
			};
			var chart = new ApexCharts(document.querySelector('#new-users-line-chart'), options2);
			chart.render();

			var options3 = {
				chart: { type: 'bar', height: 80, sparkline: { enabled: true } },
				colors: ['#2CA87F'],
				plotOptions: { bar: { columnWidth: '80%' } },
				series: [
					{
						data: [10, 30, 40, 20, 60, 50, 20, 15, 20, 25, 30, 25]
					}
				],
				xaxis: { crosshairs: { width: 1 } },
				tooltip: {
					fixed: { enabled: false },
					x: { show: false },
					y: {
						title: {
							formatter: function (seriesName) {
								return '';
							}
						}
					},
					marker: { show: false }
				}
			};
			// var chart = new ApexCharts(document.querySelector('#total-task-graph'), options3);
			// chart.render();
			var options5 = {
				chart: {
					type: 'area',
					height: 300,
					toolbar: {
						show: false
					}
				},
				colors: ['#0d6efd'],
				fill: {
					type: 'gradient',
					gradient: {
						shadeIntensity: 1,
						type: 'vertical',
						inverseColors: false,
						opacityFrom: 0.5,
						opacityTo: 0
					}
				},
				dataLabels: {
					enabled: false
				},
				stroke: {
					width: 1
				},
				plotOptions: {
					bar: {
						columnWidth: '45%',
						borderRadius: 4
					}
				},
				grid: {
					strokeDashArray: 4
				},
				series: [
					{
						data: revenueData
					}
				],
				xaxis: {
					categories: ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12'],
					axisBorder: {
						show: false
					},
					axisTicks: {
						show: false
					}
				}
			};
			var chart = new ApexCharts(document.querySelector('#customer-rate-graph'), options5);
			chart.render();
			// var options6 = {
			// 	chart: {
			// 		type: 'area',
			// 		height: 60,
			// 		stacked: true,
			// 		sparkline: { enabled: true }
			// 	},
			// 	colors: ['#4680FF'],
			// 	fill: {
			// 		type: 'gradient',
			// 		gradient: {
			// 			shadeIntensity: 1,
			// 			type: 'vertical',
			// 			inverseColors: false,
			// 			opacityFrom: 0.5,
			// 			opacityTo: 0
			// 		}
			// 	},
			// 	stroke: { curve: 'smooth', width: 2 },
			// 	series: [{ data: [5, 25, 3, 10, 4, 50, 0] }]
			// };
			// var chart = new ApexCharts(document.querySelector('#total-tasks-graph'), options6);
			// chart.render();
			// var options7 = {
			// 	chart: {
			// 		type: 'area',
			// 		height: 60,
			// 		stacked: true,
			// 		sparkline: { enabled: true }
			// 	},
			// 	colors: ['#DC2626'],
			// 	fill: {
			// 		type: 'gradient',
			// 		gradient: {
			// 			shadeIntensity: 1,
			// 			type: 'vertical',
			// 			inverseColors: false,
			// 			opacityFrom: 0.5,
			// 			opacityTo: 0
			// 		}
			// 	},
			// 	stroke: { curve: 'smooth', width: 2 },
			// 	series: [{ data: [0, 50, 4, 10, 3, 25, 5] }]
			// };
			// var chart = new ApexCharts(document.querySelector('#pending-tasks-graph'), options7);
			// chart.render();
			// var options8 = {
			// 	chart: {
			// 		height: 320,
			// 		type: 'donut'
			// 	},
			// 	series: [27, 23, 20, 17],
			// 	colors: ['#4680FF', '#E58A00', '#2CA87F', '#4680FF'],
			// 	labels: ['Total income', 'Total rent', 'Download', 'Views'],
			// 	fill: {
			// 		opacity: [1, 1, 1, 0.3]
			// 	},
			// 	legend: {
			// 		show: false
			// 	},
			// 	plotOptions: {
			// 		pie: {
			// 			donut: {
			// 				size: '65%',
			// 				labels: {
			// 					show: true,
			// 					name: {
			// 						show: true
			// 					},
			// 					value: {
			// 						show: true
			// 					}
			// 				}
			// 			}
			// 		}
			// 	},
			// 	dataLabels: {
			// 		enabled: false
			// 	},
			// 	responsive: [
			// 		{
			// 			breakpoint: 480,
			// 			options: {
			// 				plotOptions: {
			// 					pie: {
			// 						donut: {
			// 							size: '65%',
			// 							labels: {
			// 								show: true
			// 							}
			// 						}
			// 					}
			// 				}
			// 			}
			// 		}
			// 	]
			// };
			// var chart = new ApexCharts(document.querySelector('#total-income-graph'), options8);
			// chart.render();

			var optionsDonut = {
				chart: {
					type: 'donut',
					height: 350
				},
				series: appointmentStatusValues,
				labels: appointmentStatusKeys, // Nhãn cho từng trạng thái
				colors: ['#4680FF', '#2CA87F', '#E58A00', '#FF5252'], // Màu sắc tùy chỉnh
				plotOptions: {
					pie: {
						donut: {
							size: '65%',
							labels: {
								show: true,
								name: { show: true },
								value: { show: true }
							}
						}
					}
				},
				dataLabels: {
					enabled: true
				},
				legend: {
					position: 'bottom'
				}
			};
			var donut = new ApexCharts(document.querySelector('#chart-donut-status-appointment'), optionsDonut);
			donut.render();

		})();
	}
</script>